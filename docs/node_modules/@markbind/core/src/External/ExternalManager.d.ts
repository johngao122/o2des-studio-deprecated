import { External } from './External';
import { DynamicSrc } from '../Page/PageSources';
import VariableProcessor from '../variables/VariableProcessor';
export interface ExternalManagerConfig {
    baseUrl: string;
    baseUrlMap: Set<string>;
    rootPath: string;
    outputPath: string;
    ignore: string[];
    addressablePagesSource: string[];
    intrasiteLinkValidation: {
        enabled: boolean;
    };
    codeLineNumbers: boolean;
    plantumlCheck: boolean;
    headerIdMap: {
        [id: string]: number;
    };
    variableProcessor: VariableProcessor;
    siteLinkManager: any;
    pluginManager: any;
}
/**
 * Manages and generates external files (<panel src="...">) referenced in pages and layouts.
 */
export declare class ExternalManager {
    config: ExternalManagerConfig;
    builtFiles: {
        [name: string]: Promise<External>;
    };
    constructor(cfg: ExternalManagerConfig);
    reset(): void;
    /**
     * Generates the dependencies referenced by the dependencies provided, and adds any
     * collected sources to the includedFiles set.
     * @param dependencies
     * @param {Set<string>} includedFiles
     * @return {Promise<unknown[]>}
     */
    generateDependencies(dependencies: DynamicSrc[], includedFiles: Set<string>): Promise<void>;
}
//# sourceMappingURL=ExternalManager.d.ts.map